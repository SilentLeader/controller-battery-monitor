name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v1
      id: gitversion
      
    - name: Display Version
      run: |
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
        
    - name: Restore dependencies
      run: dotnet restore src/ControllerMonitor.sln
      
    - name: Build
      run: dotnet build src/ControllerMonitor.sln --no-restore --configuration Release -p:Version=${{ steps.gitversion.outputs.assemblySemVer }}
      
    - name: Test
      run: dotnet test src/ControllerMonitor.sln --no-build --configuration Release --verbosity normal

  build-cross-platform:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v1
      id: gitversion
        
    - name: Restore dependencies
      run: dotnet restore src/ControllerMonitor.sln
      
    - name: Build for Linux (on Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet build src/ControllerMonitor/ControllerMonitor.csproj --no-restore --configuration Release -r linux-x64 -p:Version=${{ steps.gitversion.outputs.assemblySemVer }}
        
    - name: Build for Windows (on Windows)
      if: matrix.os == 'windows-latest'
      run: |
        dotnet build src/ControllerMonitor/ControllerMonitor.csproj --no-restore --configuration Release -r win-x64 -p:Version=${{ steps.gitversion.outputs.assemblySemVer }}